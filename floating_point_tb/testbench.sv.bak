module testbench();

timeunit 10ns;
timeprecision 1ns;

logic CLK;
logic RESET;
logic AES_START;
logic AES_DONE;
logic [127:0] AES_KEY;
logic [127:0] AES_MSG_ENC;
logic [127:0] AES_MSG_DEC;

temp_top top(.*);

always begin : CLOCK_GENERATION
#1  CLK = ~CLK;
end

initial begin : CLOCK_INITIALIZATION
	 CLK = 0;
end

//logic [127:0] AddRoundKey_out, InvShiftRow_out, InvSubByte_out, MixColOut;

logic [1407:0] Key_Schedule;
logic [127:0] RegOut, RoundKey, AddRoundKey_out, InvShiftRow_out, InvSubByte_out, MixColOut;
logic [1:0] msg_mux;
logic [6:0] State;


always begin: INTERNAL_MONITORING
#1 Key_Schedule = top.a.keySched;
	RegOut = top.a.msg_reg_out;
	RoundKey = top.a.roundKey;
	AddRoundKey_out = top.a.AddRoundKey_out;
	InvShiftRow_out = top.a.InvShiftRow_out;
	InvSubByte_out = top.a.InvSubByte_out;
	MixColOut = top.a.MixColOut;
	msg_mux = top.a.msg_mux;
	State = top.a.control.State;
end

initial begin : TEST_VECTORS
 
AES_KEY = 128'h000102030405060708090a0b0c0d0e0f;
AES_MSG_ENC = 128'hdaec3055df058e1c39e814ea76f6747e;
AES_START = 1'b0;

#9 AES_START = 1'b1;

end

endmodule
